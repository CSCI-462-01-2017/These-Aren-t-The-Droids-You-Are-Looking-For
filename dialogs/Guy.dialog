----------------------------------------------------------------------
 * This file is part of Freedroid
 *
 * Freedroid is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * Freedroid is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Freedroid; see the file COPYING. If not, write to the 
 * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, 
 * MA 02111-1307 USA
----------------------------------------------------------------------


If you have questions concerning FreedroidRPG, please send an email to:

freedroid-discussion@lists.sourceforge.net


----------------------------------------------------------------------

<FirstTime LuaCode>
---------------------------------------------------------- HAS_MET
	if (not has_met("Guy")) then
		npc_says("HAS MET test 1 succeeded", "NO_WAIT")
	else
		guy_fail("HAS MET")
	end
	npc_says("This text is only shown as you speak to this character the first time.")
</LuaCode>

<EveryTime LuaCode>
tux_says("tux_says()", "NO_WAIT")
npc_says("npc_says()", "NO_WAIT")
cli_says("cli_says()", "NO_WAIT")
npc_says("", "NO_WAIT")  -- extra linebreak for cli_says()

	next(0)
</LuaCode>
----------------------------------------------------------------------

Nr=0 Text=_"RUNNING TEST NODE"
<LuaCode>
	show(0)
	hide(0)
---------------------------------------------------------- ITEM
	add_item("Laser Scalpel")
	add_item(".22 Automatic", 2)
	if (has_item(".22 Automatic")) then
		npc_says("ADD ITEM test 1 succeeded", "NO_WAIT")
	else
		guy_fail("ADD ITEM 1")
	end

	if (has_item_backpack(".22 Automatic")) then
		npc_says("ADD ITEM test 2 succeeded", "NO_WAIT")
	else
		guy_fail("ADD ITEM 2")
	end

	if (has_item_equipped("Laser Scalpel")) then
		npc_says("ADD ITEM test 3 succeeded", "NO_WAIT")
	else
		guy_fail("ADD ITEM 3")
	end

	-- ru654
	--[[ NOTE we need del_item_equipped() or unequipp_item()
	del_item("Laser Scalpel")
	if (not has_item("Laser Scalpel")) then
		npc_says("DEL ITEM 1 test succeeded", "NO_WAIT")
	else
		guy_fail("DEL ITEM 1")
	end
	]]--

	del_item_backpack(".22 Automatic", 2)
	if (not has_item_backpack(".22 Automatic")) then
		npc_says("DEL ITEM test 2 succeeded", "NO_WAIT")
	else
		guy_fail("DEL ITEM 2")
	end
---------------------------------------------------------- FACTION
	npc_faction("self", "Guy - self")
	npc_faction("ms", "Guy - ms")
	npc_faction("redguard", "Guy - redguard" )
	npc_faction("resistance", "Guy - resistance")
	npc_faction("civilian", "Guy - civilian")
	npc_faction("crazy", "Guy - crazy")
	npc_faction("singularity", "Guy - singularity")
	npc_faction("neutral", "Guy - neutral")
---------------------------------------------------------- HEALTH
	heal_tux()
	hurt_tux(1)
	hurt_tux(-1)
	if (get_tux_hp() == 60) then
		npc_says("HEALTH test 1 succeded", "NO_WAIT")
	else
		guy_fail("HEALTH 1")
	end

	if (get_tux_max_hp() == 60) then
		npc_says("HEALTH test 2 succeded", "NO_WAIT")
	else
		guy_fail("HEALTH 2")
	end
---------------------------------------------------------- COOL
	heat_tux(1)
	heat_tux(-1)
	if (get_tux_cool() == 100) then
		npc_says("COOL test 1 succeeded", "NO_WAIT")
	else
		guy_fail("COOL 1")
	end
---------------------------------------------------------- TELEPORT
	teleport("24-tux1")
	teleport("24-tux2")
	teleport_npc("24-guy1")
	teleport_npc("24-guy2")
	teleport_npc("24-dude1", "Dude")
	teleport_npc("24-dude2", "Dude")
---------------------------------------------------------- SKILLS
	--npc_says(get_skill("programming"))
	if (not has_met("Guy")) then
		improve_skill("programming")
		if (get_skill("programming") == 1) then
			npc_says("SKILL test 1 succeeded", "NO_WAIT")
		else
			guy_fail("SKILL 1")
		end
	else
		tux_says("Skipping SKILL test 1 due to missing possibility to downgrade skills!")
	end
---------------------------------------------------------- PROGRAMMS
	improve_program("Ricer CFLAGS")
	downgrade_program("Ricer CFLAGS")
	if (get_program_revision("Ricer CFLAGS") == 0) then
		npc_says("PROGRAMM test 1 succeeded", "NO_WAIT")
	else
		guy_fail("PROGRAMM 1")
	end
---------------------------------------------------------- QUESTS
	if (not has_met("Guy")) then
		if (not has_quest("24_dude_test_quest")) then
			npc_says("QUEST test 1 succeeded", "NO_WAIT")
		else
			guy_fail("QUEST 1")
		end
		add_quest("24_dude_test_quest", "Add 24 dude quest.")
	else
		tux_says("Skipping QUEST test 1 due to missing possibility to remove quests!")
	end

	if (has_quest("24_dude_test_quest")) then
		npc_says("QUEST test 2 succeeded", "NO_WAIT")
	else
		guy_fail("QUEST 2")
	end
	update_quest("24_dude_test_quest", "Update 24 dude quest.")

	if (not has_met("Guy")) then
		if (not done_quest("24_dude_test_quest")) then
			npc_says("QUEST test 3 succeeded", "NO_WAIT")
		else
			guy_fail("QUEST 3")
		end
		complete_quest("24_dude_test_quest", "Complete 24 dude quest.")
		if (done_quest("24_dude_test_quest")) then
			npc_says("QUEST test 4 succeeded", "NO_WAIT")
		else
			guy_fail("QUEST 4")
		end
	else
		tux_says("Skipping QUEST test 3 due to missing possibility to remove quests!")
		tux_says("Skipping QUEST test 4 due to missing possibility to remove quests!")
	end

---------------------------------------------------------- OBSTACLES

	change_obstacle_message("24_guy_sign", "Guy signmessage B")
	display_big_message("Sign message changed from")
	display_big_message("Guy signmessage A' to 'Guy signmessage B'")

	if (cmp_obstacle_state("24_guy_door", "opened")) then
		npc_says("OBSTACLE test 1 succeeded", "NO_WAIT")
	else
		guy_fail("OBSTACLE 1")
	end
	change_obstacle_state("24_guy_door", "closed")
	if (cmp_obstacle_state("24_guy_door", "closed")) then
		npc_says("OBSTACLE test 2 succeeded", "NO_WAIT")
	else
		guy_fail("OBSTACLE 2")
	end
	change_obstacle_state("24_guy_door", "opened") -- 6 = door
	change_obstacle_type("24_guy_door", "1")
	if (get_obstacle_type("24_guy_door") == 1) then
		npc_says("OBSTACLE test 3 succeeded", "NO_WAIT")
	else
		guy_fail("OBSTACLE 3")
	end
	change_obstacle_type("24_guy_door", "6") -- set it back to door

---------------------------------------------------------- NPC DEATH TEST
	if (not has_met("Guy")) then
		if (not npc_dead("DeadGuy"))  then
			npc_says("NPC DEATH test 1 succeeded", "NO_WAIT")
		else
			guy_fail("NPC DEATH 1")
		end

		drop_dead("DeadGuy") -- kill Dude
	end

	if not (running_benchmark()) then -- remember: our dialog validator is quite dump :(
		if (npc_dead("DeadGuy")) then
			npc_says("NPC DEATH test 2 succeeded", "NO_WAIT")
		else
			guy_fail("NPC DEATH 2")
		end
	end

	 -- one day we might be able to revive DeadGuy

--[[ if (not npc_dead("Dude")) then
		npc_says("NPC DEATH test 3 succeeded", "NO_WAIT")
	else
		guy_fail("NPC DEATH 3")
	end ]]--

---------------------------------------------------------- OTHER

	set_death_item("Pandora's Cube")
	npc_says("")
	display_big_message("Big Message")
	display_console_message("Console message, [b]blue[/b], not blue.")
	end_dialog()
</LuaCode>
----------------------------------------------------------------------

Nr=99 Text=_"logout"
<LuaCode>
	end_dialog()
</LuaCode>
----------------------------------------------------------------------

End of chat dialog for character="XXXXX"
